name: Request to deploy application

on:
  workflow_call:
    inputs:
      environment:
        description: 'Environment'
        type: string
        required: true
        default: tst
      account_name:
        description: "Name of AWS account for deployment"
        type: string
        required: true
        default: davincicloud-davinciservices
      software_version:
        description: "Software version to deploy"
        type: string
        required: true
      stack_name:
        description: "Stack name of CloudFormation (if not set - project artifactId)"
        type: string
        required: false
      template_name:
        description: "CloudFormation template name (if not set - project artifactId)"
        type: string
        required: false
      REPOSIOTRY_NAME:
        description: "Deployment job repository (change if deployment request is in different repository than deployment workflow)"
        type: string
        required: false
    secrets:
      CICD_GITHUB_WORKFLOW_TOKEN:
        required: true

jobs:
  trigger_deployment_workflow:
    name: '[${{ inputs.environment }}] Triggering deployment workflow for: ${{ inputs.template_name }}'
    runs-on: ubuntu-latest
    steps:
      - name: Prepare deployment parameters
        id: deployment_parameters
        run: |
          echo "${{ inputs.account_name }}"

#      - name: Sending deployment request
#        uses: peter-evans/repository-dispatch@v1
#        with:
#          token: ${{ secrets.CICD_GITHUB_WORKFLOW_TOKEN }}
#          event-type: ${{ inputs.environment }}_deployment_request_event
#          repository: ohpen/${{ steps.deployment_parameters.outputs.repository_name }}
#          client-payload: '{
#             "environment": "${{ inputs.environment }}",
#             "account_name": "${{ inputs.account_name }}",
#             "software_version": "${{ steps.deployment_parameters.outputs.software_version }}",
#             "stack_name": "${{ steps.deployment_parameters.outputs.stack_name}}",
#             "template_name": "${{ steps.deployment_parameters.outputs.template_name}}"
#           }'
